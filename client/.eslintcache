[{"D:\\Internship\\Platform Integration Software Technologies LLP\\MERN-TODO-WITH-LOGIN-AUTH\\client\\src\\index.js":"1","D:\\Internship\\Platform Integration Software Technologies LLP\\MERN-TODO-WITH-LOGIN-AUTH\\client\\src\\components\\auth\\Login.js":"2","D:\\Internship\\Platform Integration Software Technologies LLP\\MERN-TODO-WITH-LOGIN-AUTH\\client\\src\\components\\auth\\Register.js":"3","D:\\Internship\\Platform Integration Software Technologies LLP\\MERN-TODO-WITH-LOGIN-AUTH\\client\\src\\components\\layout\\Landing.js":"4","D:\\Internship\\Platform Integration Software Technologies LLP\\MERN-TODO-WITH-LOGIN-AUTH\\client\\src\\components\\layout\\home.js":"5","D:\\Internship\\Platform Integration Software Technologies LLP\\MERN-TODO-WITH-LOGIN-AUTH\\client\\src\\components\\Todo\\todo.js":"6","D:\\Internship\\Platform Integration Software Technologies LLP\\MERN-TODO-WITH-LOGIN-AUTH\\client\\src\\components\\Todo\\CreateItem.js":"7","D:\\Internship\\Platform Integration Software Technologies LLP\\MERN-TODO-WITH-LOGIN-AUTH\\client\\src\\components\\layout\\Navbar.js":"8","D:\\Internship\\Platform Integration Software Technologies LLP\\MERN-TODO-WITH-LOGIN-AUTH\\client\\src\\context\\UserContext.js":"9","D:\\Internship\\Platform Integration Software Technologies LLP\\MERN-TODO-WITH-LOGIN-AUTH\\client\\src\\App.js":"10","D:\\Internship\\Platform Integration Software Technologies LLP\\MERN-TODO-WITH-LOGIN-AUTH\\client\\src\\components\\auth\\Profile.js":"11","D:\\Internship\\Platform Integration Software Technologies LLP\\MERN-TODO-WITH-LOGIN-AUTH\\client\\src\\reportWebVitals.js":"12"},{"size":315,"mtime":1649273891238,"results":"13","hashOfConfig":"14"},{"size":3070,"mtime":1649264771693,"results":"15","hashOfConfig":"14"},{"size":3537,"mtime":1649264787665,"results":"16","hashOfConfig":"14"},{"size":1405,"mtime":1649264816186,"results":"17","hashOfConfig":"14"},{"size":462,"mtime":1649250369034,"results":"18","hashOfConfig":"14"},{"size":495,"mtime":1649250369032,"results":"19","hashOfConfig":"14"},{"size":5648,"mtime":1649312108439,"results":"20","hashOfConfig":"14"},{"size":1648,"mtime":1649273520304,"results":"21","hashOfConfig":"14"},{"size":113,"mtime":1649250369034,"results":"22","hashOfConfig":"14"},{"size":1830,"mtime":1649273490539,"results":"23","hashOfConfig":"14"},{"size":121,"mtime":1649263710298,"results":"24","hashOfConfig":"14"},{"size":375,"mtime":1649250369035,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1hj5bad",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Internship\\Platform Integration Software Technologies LLP\\MERN-TODO-WITH-LOGIN-AUTH\\client\\src\\index.js",[],["54","55"],"D:\\Internship\\Platform Integration Software Technologies LLP\\MERN-TODO-WITH-LOGIN-AUTH\\client\\src\\components\\auth\\Login.js",[],"D:\\Internship\\Platform Integration Software Technologies LLP\\MERN-TODO-WITH-LOGIN-AUTH\\client\\src\\components\\auth\\Register.js",[],"D:\\Internship\\Platform Integration Software Technologies LLP\\MERN-TODO-WITH-LOGIN-AUTH\\client\\src\\components\\layout\\Landing.js",[],"D:\\Internship\\Platform Integration Software Technologies LLP\\MERN-TODO-WITH-LOGIN-AUTH\\client\\src\\components\\layout\\home.js",[],"D:\\Internship\\Platform Integration Software Technologies LLP\\MERN-TODO-WITH-LOGIN-AUTH\\client\\src\\components\\Todo\\todo.js",[],["56","57"],"D:\\Internship\\Platform Integration Software Technologies LLP\\MERN-TODO-WITH-LOGIN-AUTH\\client\\src\\components\\Todo\\CreateItem.js",["58","59","60"],"import React, { useState, useEffect } from \"react\";\r\nimport { Form, Input, Container, ListGroup, ListGroupItem } from \"reactstrap\";\r\nimport axios from \"axios\";\r\nimport { FcEmptyTrash } from \"react-icons/fc\";\r\nimport { BsPen } from \"react-icons/bs\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nconst CreateItem = () => {\r\n  const [inputData, setInputData] = useState([]);\r\n  const [completed, setCompleted] = useState(false);\r\n  const [isUpdate, setIsUpdate] = useState(false);\r\n  const [updateFormTitle, setUpdateFormTitle] = useState(\"\");\r\n  const [id, setId] = useState(\"\");\r\n  const [text, setText] = useState({\r\n    title: \"\",\r\n  });\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  useEffect(() => {\r\n    requestToDoList();\r\n  }, []);\r\n\r\n  const handleClickOpen = (id) => {\r\n    setOpen(true);\r\n    setId(id);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const handleUpdateClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const requestToDoList = async () => {\r\n    await axios\r\n      .get(\"http://localhost:5000/all/\", {\r\n        headers: { \"x-auth-token\": localStorage.getItem(\"auth-token\") },\r\n      })\r\n      .then((res) => {\r\n        setInputData(res.data);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"error: \", error);\r\n      });\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    const newData = event.target.value;\r\n    setText({ title: newData });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    await axios\r\n      .post(\"http://localhost:5000/\", text, {\r\n        headers: { \"x-auth-token\": localStorage.getItem(\"auth-token\") },\r\n      })\r\n      .then((res) =>\r\n        setInputData((prevData) => {\r\n          return [...prevData, res.data];\r\n        })\r\n      )\r\n      .catch((err) => console.log(err));\r\n    setText({ title: \"\" });\r\n  };\r\n\r\n  const deleteTodo = async (id) => {\r\n    await axios\r\n      .delete(`http://localhost:5000/${id}`, {\r\n        headers: { \"x-auth-token\": localStorage.getItem(\"auth-token\") },\r\n      })\r\n      .then((res) => {\r\n        setInputData((prevData) => {\r\n          return prevData.filter((data) => {\r\n            return data._id !== id;\r\n          });\r\n        });\r\n      });\r\n  };\r\n\r\n  const completeTodo = async (id) => {\r\n    //change the completed status\r\n    setCompleted(!completed);\r\n    //update the data\r\n    setInputData((prevData) => {\r\n      return prevData.map((data) => {\r\n        if (data._id === id) {\r\n          data.completed = !data.completed;\r\n        }\r\n        return data;\r\n      });\r\n    });\r\n\r\n    await axios\r\n      .put(\r\n        `http://localhost:5000/completed`,\r\n        { id },\r\n        {\r\n          headers: { \"x-auth-token\": localStorage.getItem(\"auth-token\") },\r\n        }\r\n      )\r\n      .then((res) => {\r\n        console.log(res);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Form onSubmit={handleSubmit}>\r\n        <Input type=\"text\" value={text.title} onChange={handleChange} />\r\n        <Button type=\"submit\" className=\"btn-sm\">\r\n          Add\r\n        </Button>\r\n      </Form>\r\n      <ListGroup>\r\n        {inputData.map((item, index) => {\r\n          return (\r\n            <ListGroupItem\r\n              key={index}\r\n              className=\"list\"\r\n              style={{\r\n                padding: \"0.5rem\",\r\n                borderRadius: \"0.5rem\",\r\n                fontSize: \"2rem\",\r\n                backgroundColor: \"#f5f5f5\",\r\n                textDecoration: item.completed ? \"line-through\" : \"none\",\r\n              }}\r\n            >\r\n              <span\r\n                onClick={() => {\r\n                  completeTodo(item._id);\r\n                }}\r\n              >\r\n                {item.title}\r\n              </span>\r\n              {/* {item.title} */}\r\n\r\n              <span\r\n                style={{\r\n                  float: \"right\",\r\n                  fontSize: \"2rem\",\r\n                }}\r\n              >\r\n                <FcEmptyTrash onClick={() => deleteTodo(item._id)} />\r\n              </span>\r\n              <span\r\n                style={{\r\n                  float: \"right\",\r\n                  paddingRight: \"20px\",\r\n                }}\r\n              >\r\n                <BsPen\r\n                  onClick={() => {\r\n                    setId(item._id);\r\n                    handleClickOpen(item._id);\r\n                  }}\r\n                />\r\n              </span>\r\n            </ListGroupItem>\r\n          );\r\n        })}\r\n      </ListGroup>\r\n      <Dialog open={open} onClose={handleClose}>\r\n        <DialogTitle>Update</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>Update the task</DialogContentText>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"name\"\r\n            label=\"Task\"\r\n            type=\"text\"\r\n            fullWidth\r\n            variant=\"standard\"\r\n            value={updateFormTitle}\r\n            onChange={(e) => {\r\n              setUpdateFormTitle(e.target.value);\r\n              console.log(updateFormTitle);\r\n            }}\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose}>Cancel</Button>\r\n          <Button onClick={handleUpdateClose}>Update</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default CreateItem;\r\n","D:\\Internship\\Platform Integration Software Technologies LLP\\MERN-TODO-WITH-LOGIN-AUTH\\client\\src\\components\\layout\\Navbar.js",["61","62","63","64"],"import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  Button,\r\n} from \"reactstrap\";\r\nimport ReactNiceAvatar, {\r\n  AvatarFullConfig,\r\n  genConfig,\r\n} from \"react-nice-avatar\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\n\r\nconst Header = () => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const config = {\r\n    bgColor: \"transparent\",\r\n    shape: \"circle\",\r\n  };\r\n  const myConfig = genConfig(config);\r\n  const toggle = () => setIsOpen(!isOpen);\r\n  let history = useHistory();\r\n\r\n  return (\r\n    <div>\r\n      <Navbar color=\"dark\" dark expand=\"md\">\r\n        <NavbarBrand className=\"header\">\r\n          <strong>TODO APP</strong>\r\n        </NavbarBrand>\r\n        <NavbarToggler onClick={toggle} />\r\n        <Collapse isOpen={isOpen} navbar>\r\n          <Nav className=\"ml-auto\" navbar>\r\n            <NavItem>\r\n              {\r\n                //only show when the user login\r\n\r\n                true ? (\r\n                  <Link to=\"/profile\">\r\n                    <ReactNiceAvatar\r\n                      style={{\r\n                        width: \"3.5rem\",\r\n                        height: \"3.5rem\",\r\n                        marginRight: \"1rem\",\r\n                        cursor: \"pointer\",\r\n                      }}\r\n                      {...myConfig}\r\n                    />\r\n                  </Link>\r\n                ) : (\r\n                  <NavLink>Login</NavLink>\r\n                )\r\n              }\r\n            </NavItem>\r\n          </Nav>\r\n        </Collapse>\r\n      </Navbar>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","D:\\Internship\\Platform Integration Software Technologies LLP\\MERN-TODO-WITH-LOGIN-AUTH\\client\\src\\context\\UserContext.js",[],"D:\\Internship\\Platform Integration Software Technologies LLP\\MERN-TODO-WITH-LOGIN-AUTH\\client\\src\\App.js",[],"D:\\Internship\\Platform Integration Software Technologies LLP\\MERN-TODO-WITH-LOGIN-AUTH\\client\\src\\components\\auth\\Profile.js",[],"D:\\Internship\\Platform Integration Software Technologies LLP\\MERN-TODO-WITH-LOGIN-AUTH\\client\\src\\reportWebVitals.js",[],{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","replacedBy":"68"},{"ruleId":"65","replacedBy":"69"},{"ruleId":"67","replacedBy":"70"},{"ruleId":"71","severity":1,"message":"72","line":17,"column":10,"nodeType":"73","messageId":"74","endLine":17,"endColumn":18},{"ruleId":"71","severity":1,"message":"75","line":17,"column":20,"nodeType":"73","messageId":"74","endLine":17,"endColumn":31},{"ruleId":"71","severity":1,"message":"76","line":19,"column":10,"nodeType":"73","messageId":"74","endLine":19,"endColumn":12},{"ruleId":"71","severity":1,"message":"77","line":1,"column":27,"nodeType":"73","messageId":"74","endLine":1,"endColumn":36},{"ruleId":"71","severity":1,"message":"78","line":10,"column":3,"nodeType":"73","messageId":"74","endLine":10,"endColumn":9},{"ruleId":"71","severity":1,"message":"79","line":13,"column":3,"nodeType":"73","messageId":"74","endLine":13,"endColumn":19},{"ruleId":"71","severity":1,"message":"80","line":26,"column":7,"nodeType":"73","messageId":"74","endLine":26,"endColumn":14},"no-native-reassign",["81"],"no-negated-in-lhs",["82"],["81"],["82"],"no-unused-vars","'isUpdate' is assigned a value but never used.","Identifier","unusedVar","'setIsUpdate' is assigned a value but never used.","'id' is assigned a value but never used.","'useEffect' is defined but never used.","'Button' is defined but never used.","'AvatarFullConfig' is defined but never used.","'history' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]